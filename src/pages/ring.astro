---
import Header from "../components/Header.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import type { Frontmatter } from "../types/Frontmatter";
import { splitTextIntoChunks } from "../utils/StringUtil";
const posts = await Astro.glob<Frontmatter>("./*.md");

const SVG_WIDTH = 500;
const SVG_HEIGHT = 500;

const centerX = SVG_WIDTH / 2;
const centerY = SVG_HEIGHT / 2;
const radii = [
    SVG_WIDTH * 0.25,
    SVG_WIDTH * 0.3,
    SVG_WIDTH * 0.35,
    SVG_WIDTH * 0.4,
    SVG_WIDTH * 0.45,
];
const rotationDurations = ["180s", "150s", "270s", "360s", "210s"];

// 충분한 단어를 포함한 영어 단어 리스트
// const words = [
//     "apple",
//     "banana",
//     "cherry",
//     "date",
//     "elderberry",
//     "fig",
//     "grape",
//     "honeydew",
//     "kiwi",
//     "lemon",
//     "mango",
//     "nectarine",
//     "orange",
//     "papaya",
//     "quince",
//     "raspberry",
//     "strawberry",
//     "tangerine",
//     "ugli",
//     "vanilla",
//     "watermelon",
//     "xigua",
//     "yellow",
//     "zucchini",
//     "apricot",
//     "blueberry",
//     "cranberry",
//     "dragonfruit",
//     "eggfruit",
//     "feijoa",
//     "guava",
//     "huckleberry",
//     "imbe",
//     "jackfruit",
//     "kumquat",
//     "lime",
//     "mulberry",
//     "nectar",
//     "olive",
//     "peach",
//     "plum",
//     "pineapple",
//     "pomegranate",
//     "salak",
//     "tamarind",
//     "ugli",
//     "watermelon",
//     "yam",
//     "ziziphus",
// ];
//
const words = posts.map((post) => post.url);

// 각 원에 들어갈 텍스트를 100글자 단위로 나누기
const texts = splitTextIntoChunks(words.join(" ").trim(), 100);
console.log(texts);

const createPathD = (radius: number) => {
    return `M ${centerX}, ${centerY} m -${radius}, 0 a ${radius},${radius} 0 1,1 ${radius * 2},0 a ${radius},${radius} 0 1,1 -${radius * 2},0`;
};
---

<BaseLayout>
    <Header />
    <div class="flex justify-center items-center h-dvh">
        <svg
            width={SVG_WIDTH}
            height={SVG_HEIGHT}
            viewBox={`0 0 ${SVG_WIDTH} ${SVG_HEIGHT}`}
        >
            {
                radii.map((radius, index) => {
                    return (
                        <g
                            class={`animate-[spin_${rotationDurations[index]}_linear_infinite] origin-center`}
                        >
                            <path
                                id={`circlePath${index}`}
                                fill="none"
                                stroke="none"
                                d={createPathD(radius)}
                            />
                            <text class="text-2xl">
                                <textPath href={`#circlePath${index}`}>
                                    {texts[index]?.split(" ").map((text) => (
                                        <a href={text}>{text} </a>
                                    ))}
                                </textPath>
                            </text>
                        </g>
                    );
                })
            }
        </svg>
    </div>
</BaseLayout>
